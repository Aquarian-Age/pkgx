/*
 * The code is automatically generated by the Goland.
 * Copyright © Aquarian-Age. All Rights Reserved.
 * Licensed under MIT
 */

package pub

import "strings"

func ConvH24ToH12S(h24 int) string {
	var h12 string
	switch h24 {
	case 23, 0:
		h12 = "子"
	case 1, 2:
		h12 = "丑"
	case 3, 4:
		h12 = "寅"
	case 5, 6:
		h12 = "卯"
	case 7, 8:
		h12 = "辰"
	case 9, 10:
		h12 = "巳"
	case 11, 12:
		h12 = "午"
	case 13, 14:
		h12 = "未"
	case 15, 16:
		h12 = "申"
	case 17, 18:
		h12 = "酉"
	case 19, 20:
		h12 = "戌"
	case 21, 22:
		h12 = "亥"
	}
	return h12
}

// Conv24Hto12H 阳历时间转时辰
func Conv24Hto12H(h24 int) (h12 int) {
	switch h24 {
	case 23, 0:
		h12 = 1 //子时
	case 1, 2:
		h12 = 2 //丑时
	case 3, 4:
		h12 = 3 //寅时
	case 5, 6:
		h12 = 4 //卯时
	case 7, 8:
		h12 = 5 //辰时
	case 9, 10:
		h12 = 6 //巳时
	case 11, 12:
		h12 = 7 //午时
	case 13, 14:
		h12 = 8 //未时
	case 15, 16:
		h12 = 9 //申时
	case 17, 18:
		h12 = 10 //酉时
	case 19, 20:
		h12 = 11 //戌时
	case 21, 22:
		h12 = 12 //亥时
	}
	return
}

// 转换月干支为数字形式
// 寅月1 卯月2 辰月3 ....子月11 丑月12
func ConvMGZToNumber(mgz string) (n int) {
	gzmap := map[string]int{
		"寅": 1, "卯": 2, "辰": 3, "巳": 4, "午": 5, "未": 6, "申": 7, "酉": 8, "戌": 9, "亥": 10, "子": 11, "丑": 12,
	}
	for k, v := range gzmap {
		if strings.ContainsAny(mgz, k) {
			n = v
			break
		}
	}
	return
}

// 转换时辰干支为数字形式
func ConvHGZToNumber(hgz string) (hn int) {
	gzmap := map[string]int{
		"子": 1, "丑": 2, "寅": 3, "卯": 4, "辰": 5, "巳": 6, "午": 7, "未": 8, "申": 9, "酉": 10, "戌": 11, "亥": 12,
	}
	for k, v := range gzmap {
		if strings.ContainsAny(hgz, k) {
			hn = v
			break
		}
	}
	return
}

// 地支转生肖
func ConvZhiToShengXiao(s string) (sx string) {
	sxmap := map[string]string{
		"子": "鼠", "丑": "牛", "寅": "虎", "卯": "兔", "辰": "龙", "巳": "蛇",
		"午": "马", "未": "羊", "申": "猴", "酉": "鸡", "戌": "狗", "亥": "猪",
	}
	for k, v := range sxmap {
		if strings.ContainsAny(s, k) {
			sx = v
			break
		}
	}
	return
}
