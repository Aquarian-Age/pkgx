/*
 * The code is automatically generated by the Goland.
 * Copyright Â© Aquarian-Age. All Rights Reserved.
 * Licensed under MIT.
 */

package cmd

import (
	"errors"
	"net"
)

// GetLocalIP return the first external-IP4 configured for the first
// interface connected to this node.
//https://vimsky.com/examples/detail/golang-ex-net-IP---class.html
func GetLocalIP() (net.IP, error) {
	interfaces, err := net.Interfaces()
	if err != nil {
		return nil, err
	}
	for _, iface := range interfaces {
		if (iface.Flags & net.FlagUp) == 0 {
			continue // interface down
		}
		if (iface.Flags & net.FlagLoopback) != 0 {
			continue // loopback interface
		}
		addrs, err := iface.Addrs()
		if err != nil {
			return nil, err
		}
		for _, addr := range addrs {
			var ip net.IP
			switch v := addr.(type) {
			case *net.IPNet:
				ip = v.IP
			case *net.IPAddr:
				ip = v.IP
			}
			if ip != nil && !ip.IsLoopback() {
				if ip = ip.To4(); ip != nil {
					return ip, nil
				}
			}
		}
	}
	return nil, errors.New("cannot find local IP address")
}
